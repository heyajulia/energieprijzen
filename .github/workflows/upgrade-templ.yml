name: Upgrade Templ
on:
  push:
    paths:
      - go.mod
      - go.sum
permissions:
  contents: write
jobs:
  update-templ:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Extract versions from commit message
        id: extract_version
        run: |
          COMMIT_MESSAGE="$(git log -1 --pretty=%B)"
          OLD_VERSION=$(echo "$COMMIT_MESSAGE" | grep -oP 'from \K\d+\.\d+\.\d+')
          NEW_VERSION=$(echo "$COMMIT_MESSAGE" | grep -oP 'to \K\d+\.\d+\.\d+')
          echo "::set-output name=old_version::$OLD_VERSION"
          echo "::set-output name=new_version::$NEW_VERSION"
      - name: Install Templ
        run: |
          cd $RUNNER_TEMP && \
          wget https://github.com/a-h/templ/releases/download/v${{ steps.extract_version.outputs.new_version }}/templ_Linux_x86_64.tar.gz && \
          tar xf templ_Linux_x86_64.tar.gz && \
          mv templ /usr/local/bin
      - name: Replace old version with new one in .devcontainer/Dockerfile
        run: |
          sed -i 's/${{ steps.extract_version.outputs.old_version }}/${{ steps.extract_version.outputs.new_version }}/' .devcontainer/Dockerfile
      - run: templ generate
      - name: Commit changes
        run: |
          git checkout -b $BRANCH_NAME
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"
          git commit -am "Regenerate template Go file and update Dockerfile to use Templ v${{ steps.extract_version.outputs.new_version }}"
          git push origin $BRANCH_NAME
        env:
          BRANCH_NAME: upgrade-templ-${{ steps.extract_version.outputs.new_version }}
      - name: Open a Pull Request
        uses: repo-sync/pull-request@v2
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          pr_title: "Upgrade Templ"
          pr_body: ""
          destination_branch: "main"
          source_branch: upgrade-templ-${{ steps.extract_version.outputs.new_version }}
