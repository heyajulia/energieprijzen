package main

import (
	"github.com/heyajulia/energieprijzen/internal"
	"github.com/heyajulia/energieprijzen/internal/ranges"
)

type templateData struct {
	Hello        string
	Goodbye      string
	TomorrowDate string
	*internal.EnergyPrices
}

templ report(d templateData) {
	{ d.Hello } De energieprijzen van { d.TomorrowDate } zijn bekend.
	<br/>
	<br/>
	Gemiddeld: { internal.FormatCurrencyValue(addCharges(d.Average)) } per kWh { ranges.CollapseAndFormat(d.AverageHours) }
	<br/>
	Hoog: { internal.FormatCurrencyValue(addCharges(d.High)) } per kWh { ranges.CollapseAndFormat(d.HighHours) }
	<br/>
	Laag: { internal.FormatCurrencyValue(addCharges(d.Low)) } per kWh { ranges.CollapseAndFormat(d.LowHours) }
	<br/>
	<br/>
	Alle prijzen van morgen per uur:
	<br/>
	<br/>
	<code>
		for _, p := range d.Prices {
			{ internal.GetPriceEmoji(addCharges(p.Price), addCharges(d.Average)) } { internal.Pad(p.Hour) }:00 â€“ { internal.Pad(p.Hour) }:59: { internal.FormatCurrencyValue(addCharges(p.Price)) } per kWh
			<br/>
		}
	</code>
	<br/>
	{ d.Goodbye }
}

// Returns the price in Euros per kWh, including VAT.
func addCharges(price float64) float64 {
	const (
		purchaseCost = 0.0484
		energyTax    = 0.1312
	)

	return price + purchaseCost + energyTax
}
